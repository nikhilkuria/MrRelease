name: 'Release: Push to Channel'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'mrrelease2 Release version to push to a channel (e.g., 1.2.3 or 1.2.3-beta.4)'
        required: true
        type: string

      release-channel:
        description: 'Release channel'
        required: true
        type: choice
        default: 'beta'
        options:
          - beta
          - stable
          - experiment

jobs:
  validate-inputs:
    name: Validate Inputs
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check_version.outputs.version }}
      release_channel: ${{ github.event.inputs.release-channel }}
    steps:
      - name: Check Version Format
        id: check_version
        env:
          INPUT_VERSION: ${{ github.event.inputs.version }}
        run: |
          input_version="${{ env.INPUT_VERSION }}"
          version_regex='^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$'

          if [[ "$input_version" =~ $version_regex ]]; then
            echo "Version format is valid: $input_version"
            echo "version=$input_version" >> "$GITHUB_OUTPUT"
          else
            echo "::error::Invalid version format provided: '$input_version'. Must match regex '$version_regex'."
            exit 1
          fi

  release-to-npm:
    name: Release to NPM
    runs-on: ubuntu-latest
    needs: validate-inputs
    timeout-minutes: 5
    steps:
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.x

      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Add beta/next tags to NPM
        if: needs.validate-inputs.outputs.release_channel == 'beta'
        run: |
          npm dist-tag add "mrrelease2@${{ needs.validate-inputs.outputs.version }}" next
          npm dist-tag add "mrrelease2@${{ needs.validate-inputs.outputs.version }}" beta

      - name: Add latest/stable tags to NPM
        if: needs.validate-inputs.outputs.release_channel == 'stable'
        run: |
          npm dist-tag add "mrrelease2@${{ needs.validate-inputs.outputs.version }}" latest
          npm dist-tag add "mrrelease2@${{ needs.validate-inputs.outputs.version }}" stable

      - name: Add experiment tag to NPM
        if: needs.validate-inputs.outputs.release_channel == 'experiment'
        run: |
          npm dist-tag add "mrrelease2@${{ needs.validate-inputs.outputs.version }}" experiment
